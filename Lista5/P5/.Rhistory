test <<- as.data.frame(cbind(test_data, test_result))
names(df1) <<- nm
names(df2) <<- nm
names(df3) <<- nm
names(df4) <<- nm
names(test) <<- nm
}
gendata()
trc <- trainControl (method="repeatedcv", number=10, repeats=5)
nnetGrid <-  expand.grid(
size = seq(from = 1, to = 10, by = 1),
decay = seq(from = 0.01, to = 0.2, by = 0.02)
)
model1 <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
tuneGrid = nnetGrid,
trControl=trc)
model1
model1 <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
#tuneGrid = nnetGrid,
trControl=trc)
model1
p1 = predict(model1, test)
r1 = postResample(p1, test$target)
r1
model1 <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
size = 0,
#tuneGrid = nnetGrid,
trControl=trc)
model1.linear = train (
target ~.,
data = df1,
linout = TRUE,
method='lm',
metric = "RMSE",
#size = 0,
#tuneGrid = nnetGrid,
trControl=trc)
warnings()
model1.linear = train (
target ~.,
data = df1,
#linout = TRUE,
method='lm',
metric = "RMSE",
#size = 0,
#tuneGrid = nnetGrid,
trControl=trc)
model1 <- train (
target ~.,
data = df1,
#linout = TRUE,
method='nnet',
metric = "RMSE",
size = 0,
#tuneGrid = nnetGrid,
trControl=trc)
warnings()
model1 <- train (
target ~.,
data = df1,
#linout = TRUE,
method='nnet',
metric = "RMSE",
.size = 0,
#tuneGrid = nnetGrid,
trControl=trc)
model1
model1 <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
.size = 0,
#tuneGrid = nnetGrid,
trControl=trc)
model1
rm(model1)
model1 <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
.size = 0,
#tuneGrid = nnetGrid,
trControl=trc)
model1
trc <- trainControl (method="repeatedcv", number=10, repeats=5)
rm(list=ls())
rm(ls())
ls()
a = 1
b = 2
?rm
rm(ls())
ls()
rm(list = ls())
library(MASS)
library(nnet)
library(caret)
f = function(x) {
return(4*sin(pi*x[1]) + 2*cos(pi*x[2]) + rnorm(1,0,0.5**2))
}
runf = function(x) {
return(apply(x,1,f))
}
gendata = function() {
data1 = cbind(runif(100,-1,1),runif(100,-1,1))
data2 = cbind(runif(200,-1,1),runif(200,-1,1))
data3 = cbind(runif(500,-1,1),runif(500,-1,1))
data4 = cbind(runif(1000,-1,1),runif(1000,-1,1))
test_data = cbind(runif(1024,-1,1),runif(1024,-1,1))
result1 = runf(data1)
result2 = runf(data2)
result3 = runf(data3)
result4 = runf(data4)
test_result = runf(test_data)
nm = c("x1","x2","target")
df1 <<- as.data.frame(cbind(data1, result1))
df2 <<- as.data.frame(cbind(data2, result2))
df3 <<- as.data.frame(cbind(data3, result3))
df4 <<- as.data.frame(cbind(data4, result4))
test <<- as.data.frame(cbind(test_data, test_result))
names(df1) <<- nm
names(df2) <<- nm
names(df3) <<- nm
names(df4) <<- nm
names(test) <<- nm
}
gendata()
trc <- trainControl (method="repeatedcv", number=10, repeats=5)
model1.nnet <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc)
model2.nnet <- train (
target ~.,
data = df2,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc)
model3.nnet <- train (
target ~.,
data = df3,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc)
model4.nnet <- train (
target ~.,
data = df4,
linout = TRUE,
method='nnet',
metric = "RMSE",
tuneGrid = nnetGrid,
trControl=trc)
model4.nnet <- train (
target ~.,
data = df4,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc)
model1.linear = train (
target ~.,
data = df1,
method='lm',
metric = "RMSE",
trControl=trc)
model2.linear = train (
target ~.,
data = df2,
method='lm',
metric = "RMSE",
trControl=trc)
model3.linear = train (
target ~.,
data = df3,
method='lm',
metric = "RMSE",
trControl=trc)
model4.linear = train (
target ~.,
data = df4,
method='lm',
metric = "RMSE",
trControl=trc)
model1.nnet
model1.linear
p1.nnet = predict(model1.nnet, test)
p2.nnet = predict(model2.nnet, test)
p3.nnet = predict(model3.nnet, test)
p4.nnet = predict(model4.nnet, test)
p1.linear = predict(model1.linear, test)
p2.linear = predict(model2.linear, test)
p3.linear = predict(model3.linear, test)
p4.linear = predict(model4.linear, test)
postResample((p1.linear), test$target)
model1.linear$bestTune
model1.nnet$bestTune
r1.nnet = postResample(p1.nnet, test$target)
r2.nnet = postResample(p2.nnet, test$target)
r3.nnet = postResample(p3.nnet, test$target)
r4.nnet = postResample(p4.nnet, test$target)
r1.linear = postResample(p1.linear, test$target)
r2.linear = postResample(p2.linear, test$target)
r3.linear = postResample(p3.linear, test$target)
r4.linear = postResample(p4.linear, test$target)
r = rbind(
r1.nnet,
r2.nnet,
r3.nnet,
r4.nnet,
r1.linar,
r2.linar,
r3.linar,
r4.linar)
r = rbind(
r1.nnet,
r2.nnet,
r3.nnet,
r4.nnet,
r1.linear,
r2.linear,
r3.linear,
r4.linear)
r
library(stargazer)
stargazer(r)
model1.linear
model1.linear = train (
target ~.,
data = df1,
method='lm',
metric = "RMSE",
trControl=trc)
model1.linear$method
model1.linear$modelInfo
model1.linear$modelType
model1.linear$results
model1.linear$pred
model1.linear$bestTune
model1.linear$call
model1.linear$dots
model1.linear$metric
model1.linear$control
model1.linear$finalModel
model1.linear$preProcess
model1.linear$trainingData
model1.linear$resample
model1.linear$resampledCM
model1.linear$perfNames
model1.linear$maximize
model1.linear$yLimits
model1.linear$times
model1.linear$levels
model1.linear$terms
model1.linear$xlevels
model1.linear = train (
target ~.,
data = df1,
method='lm',
metric = "RMSE",
trControl=trc)
model1.linear.regularized <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
.size = 0,
metric = "RMSE",
trControl=trc)
model1.linear.regularized
model1.linear.regularized$modelInfo
model1.linear.regularized$bestTune
model1.linear.regularized <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc,
size = 0)
model1.linear.regularized <- train (
target ~.,
data = df1,
#linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc,
size = 0)
model1.linear.regularized <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc,
size = 0)
warnings()
model1.linear.regularized <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc,
.size = 0)
model1.linear.regularized
model1.linear.regularized <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc,
size = 0)
warnings()
model1.linear.regularized
model1.linear.regularized <- train (
target ~.,
data = df1,
#linout = TRUE,
method='lm',
metric = "RMSE",
trControl=trc
#size = 0
)
model1.linear.regularized
df1
model1.linear.regularized
model1.linear.not.regularized <- train (
target ~.,
data = df1,
method='lm',
metric = "RMSE",
trControl=trc
)
model2.linear.not.regularized <- train (
target ~.,
data = df2,
method='lm',
metric = "RMSE",
trControl=trc
)
model3.linear.not.regularized <- train (
target ~.,
data = df3,
method='lm',
metric = "RMSE",
trControl=trc
)
model4.linear.not.regularized <- train (
target ~.,
data = df4,
method='lm',
metric = "RMSE",
trControl=trc
)
p1.nnet = predict(model1.nnet, test)
p2.nnet = predict(model2.nnet, test)
p3.nnet = predict(model3.nnet, test)
p4.nnet = predict(model4.nnet, test)
p1.linear = predict(model1.linear, test)
p2.linear = predict(model2.linear, test)
p3.linear = predict(model3.linear, test)
p4.linear = predict(model4.linear, test)
p1.linear.not.regularized = predict(model1.linear.not.regularized, test)
p2.linear.not.regularized = predict(model2.linear.not.regularized, test)
p3.linear.not.regularized = predict(model3.linear.not.regularized, test)
p4.linear.not.regularized = predict(model4.linear.not.regularized, test)
r1.nnet = postResample(p1.nnet, test$target)
r2.nnet = postResample(p2.nnet, test$target)
r3.nnet = postResample(p3.nnet, test$target)
r4.nnet = postResample(p4.nnet, test$target)
r1.linear = postResample(p1.linear, test$target)
r2.linear = postResample(p2.linear, test$target)
r3.linear = postResample(p3.linear, test$target)
r4.linear = postResample(p4.linear, test$target)
r1.linear.not.regularized = postResample(p1.linear.not.regularized, test$target)
r2.linear.not.regularized = postResample(p2.linear.not.regularized, test$target)
r3.linear.not.regularized = postResample(p3.linear.not.regularized, test$target)
r4.linear.not.regularized = postResample(p4.linear.not.regularized, test$target)
r = rbind(
r1.nnet,
r2.nnet,
r3.nnet,
r4.nnet,
r1.linear,
r2.linear,
r3.linear,
r4.linear,
r1.linear.not.regularized,
r2.linear.not.regularized,
r3.linear.not.regularized,
r4.linear.not.regularized
)
stargazer(r)
model1.linear.not.regularized <- train (
target ~.,
data = df1,
method='nnet',
metric = "RMSE",
trControl=trc
)
model1.linear.not.regularized$bestTune
model1.linear.not.regularized <- train (
target ~.,
data = df1,
method='nnet',
metric = "RMSE",
trControl=trc,
size = 0
)
model1.linear.not.regularized <- train (
target ~.,
data = df1,
method='nnet',
metric = "RMSE",
#trControl=trc,
size = 0
)
warnings()
library(MASS)
library(nnet)
library(caret)
library(stargazer)
f = function(x) {
return(4*sin(pi*x[1]) + 2*cos(pi*x[2]) + rnorm(1,0,0.5**2))
}
runf = function(x) {
return(apply(x,1,f))
}
gendata = function() {
data1 = cbind(runif(100,-1,1),runif(100,-1,1))
data2 = cbind(runif(200,-1,1),runif(200,-1,1))
data3 = cbind(runif(500,-1,1),runif(500,-1,1))
data4 = cbind(runif(1000,-1,1),runif(1000,-1,1))
test_data = cbind(runif(1024,-1,1),runif(1024,-1,1))
result1 = runf(data1)
result2 = runf(data2)
result3 = runf(data3)
result4 = runf(data4)
test_result = runf(test_data)
nm = c("x1","x2","target")
df1 <<- as.data.frame(cbind(data1, result1))
df2 <<- as.data.frame(cbind(data2, result2))
df3 <<- as.data.frame(cbind(data3, result3))
df4 <<- as.data.frame(cbind(data4, result4))
test <<- as.data.frame(cbind(test_data, test_result))
names(df1) <<- nm
names(df2) <<- nm
names(df3) <<- nm
names(df4) <<- nm
names(test) <<- nm
}
gendata()
trc <- trainControl (method="repeatedcv", number=10, repeats=5)
model1.nnet <- train (
target ~.,
data = df1,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc)
model1.nnet
model2.nnet <- train (
target ~.,
data = df2,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc)
model3.nnet <- train (
target ~.,
data = df3,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc)
model4.nnet <- train (
target ~.,
data = df4,
linout = TRUE,
method='nnet',
metric = "RMSE",
trControl=trc)
model1
model2
model2.nnet
model3.nnet
model4.nnet
